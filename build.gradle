plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "1.7-SNAPSHOT" apply false
}

architectury {
    minecraft = rootProject.minecraft_version
}

subprojects {
    apply plugin: "dev.architectury.loom"

    loom {
        silentMojangMappingsLicense()
    }

    repositories {
        maven {
            name = "TerraformersMC"
            url = "https://maven.terraformersmc.com/"
        }
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"

        mappings loom.layered {
            it.mappings "net.fabricmc:yarn:${rootProject.yarn_mappings}:v2"
            it.mappings("dev.architectury:yarn-mappings-patch-neoforge:1.21+build.4")
        }
        if (project.name == "common")
        {
            modCompileOnly "dev.emi:emi-xplat-intermediary:${project.emi_version}:api"
            modCompileOnly "me.shedaniel:RoughlyEnoughItems-api:${project.rei_version}"
        } else {
            modCompileOnly "dev.emi:emi-${project.name}:${project.emi_version}:api"
            modCompileOnly "me.shedaniel:RoughlyEnoughItems-api-${project.name}:${project.rei_version}"
        }
    }
}

def createVersionString() {
    def builder = new StringBuilder()

    def isReleaseBuild = project.hasProperty('build.release')
    def buildId = System.getenv('GITHUB_RUN_NUMBER')

    if (isReleaseBuild) {
        builder.append(mod_version)
    } else {
        builder.append(mod_version.split('-')[0])
        builder.append('-snapshot')
    }

    builder.append('+mc').append(minecraft_version)

    if (!isReleaseBuild) {
        if (buildId != null) {
            builder.append("-build.${buildId}")
        } else {
            builder.append('-local')
        }
    }

    return builder.toString()
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    base {
        archivesName = rootProject.archives_base_name
    }

    version = createVersionString()
    group = rootProject.maven_group

    repositories {
        // Add repositories to retrieve artifacts from in here.
        // You should only use this when depending on other mods because
        // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
        // See https://docs.gradle.org/current/userguide/declaring_repositories.html
        // for more information about repositories.
        maven { url "https://maven.neoforged.net/releases/" }
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.release = 21
    }

    java {
        withSourcesJar()
    }
}
